//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DynamicsNav.Plugin.SOAP.UnitsOfMeasure {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", ConfigurationName="SOAP.UnitsOfMeasure.UnitsOfMeasure_Port")]
    public interface UnitsOfMeasure_Port {
        
        // CODEGEN: Generating message contract since the wrapper name (Read_Result) of message Read_Result does not match the default value (Read)
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/unitsofmeasure:Read", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Read_Result Read(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Read request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/unitsofmeasure:Read", ReplyAction="*")]
        System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Read_Result> ReadAsync(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Read request);
        
        // CODEGEN: Generating message contract since the wrapper name (ReadByRecId_Result) of message ReadByRecId_Result does not match the default value (ReadByRecId)
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/unitsofmeasure:ReadByRecId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadByRecId_Result ReadByRecId(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadByRecId request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/unitsofmeasure:ReadByRecId", ReplyAction="*")]
        System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadByRecId_Result> ReadByRecIdAsync(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadByRecId request);
        
        // CODEGEN: Generating message contract since the wrapper name (ReadMultiple_Result) of message ReadMultiple_Result does not match the default value (ReadMultiple)
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/unitsofmeasure:ReadMultiple", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadMultiple_Result ReadMultiple(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadMultiple request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/unitsofmeasure:ReadMultiple", ReplyAction="*")]
        System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadMultiple_Result> ReadMultipleAsync(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadMultiple request);
        
        // CODEGEN: Generating message contract since the wrapper name (IsUpdated_Result) of message IsUpdated_Result does not match the default value (IsUpdated)
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/unitsofmeasure:IsUpdated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        DynamicsNav.Plugin.SOAP.UnitsOfMeasure.IsUpdated_Result IsUpdated(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.IsUpdated request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/unitsofmeasure:IsUpdated", ReplyAction="*")]
        System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.IsUpdated_Result> IsUpdatedAsync(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.IsUpdated request);
        
        // CODEGEN: Generating message contract since the wrapper name (GetRecIdFromKey_Result) of message GetRecIdFromKey_Result does not match the default value (GetRecIdFromKey)
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/unitsofmeasure:GetRecIdFromKey", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        DynamicsNav.Plugin.SOAP.UnitsOfMeasure.GetRecIdFromKey_Result GetRecIdFromKey(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.GetRecIdFromKey request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/unitsofmeasure:GetRecIdFromKey", ReplyAction="*")]
        System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.GetRecIdFromKey_Result> GetRecIdFromKeyAsync(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.GetRecIdFromKey request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/unitsofmeasure:Create", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Create_Result Create(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Create request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/unitsofmeasure:Create", ReplyAction="*")]
        System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Create_Result> CreateAsync(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Create request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/unitsofmeasure:CreateMultiple", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        DynamicsNav.Plugin.SOAP.UnitsOfMeasure.CreateMultiple_Result CreateMultiple(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.CreateMultiple request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/unitsofmeasure:CreateMultiple", ReplyAction="*")]
        System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.CreateMultiple_Result> CreateMultipleAsync(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.CreateMultiple request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/unitsofmeasure:Update", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Update_Result Update(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Update request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/unitsofmeasure:Update", ReplyAction="*")]
        System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Update_Result> UpdateAsync(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Update request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/unitsofmeasure:UpdateMultiple", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UpdateMultiple_Result UpdateMultiple(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UpdateMultiple request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/unitsofmeasure:UpdateMultiple", ReplyAction="*")]
        System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UpdateMultiple_Result> UpdateMultipleAsync(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UpdateMultiple request);
        
        // CODEGEN: Generating message contract since the wrapper name (Delete_Result) of message Delete_Result does not match the default value (Delete)
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/unitsofmeasure:Delete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Delete_Result Delete(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Delete request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/unitsofmeasure:Delete", ReplyAction="*")]
        System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Delete_Result> DeleteAsync(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Delete request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure")]
    public partial class UnitsOfMeasure : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string keyField;
        
        private string codeField;
        
        private string descriptionField;
        
        private string international_Standard_CodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
                this.RaisePropertyChanged("Key");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string International_Standard_Code {
            get {
                return this.international_Standard_CodeField;
            }
            set {
                this.international_Standard_CodeField = value;
                this.RaisePropertyChanged("International_Standard_Code");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure")]
    public partial class UnitsOfMeasure_Filter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private UnitsOfMeasure_Fields fieldField;
        
        private string criteriaField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public UnitsOfMeasure_Fields Field {
            get {
                return this.fieldField;
            }
            set {
                this.fieldField = value;
                this.RaisePropertyChanged("Field");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Criteria {
            get {
                return this.criteriaField;
            }
            set {
                this.criteriaField = value;
                this.RaisePropertyChanged("Criteria");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure")]
    public enum UnitsOfMeasure_Fields {
        
        /// <remarks/>
        Code,
        
        /// <remarks/>
        Description,
        
        /// <remarks/>
        International_Standard_Code,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Read", WrapperNamespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", IsWrapped=true)]
    public partial class Read {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", Order=0)]
        public string Code;
        
        public Read() {
        }
        
        public Read(string Code) {
            this.Code = Code;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Read_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", IsWrapped=true)]
    public partial class Read_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", Order=0)]
        public DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure UnitsOfMeasure;
        
        public Read_Result() {
        }
        
        public Read_Result(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure UnitsOfMeasure) {
            this.UnitsOfMeasure = UnitsOfMeasure;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReadByRecId", WrapperNamespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", IsWrapped=true)]
    public partial class ReadByRecId {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", Order=0)]
        public string recId;
        
        public ReadByRecId() {
        }
        
        public ReadByRecId(string recId) {
            this.recId = recId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReadByRecId_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", IsWrapped=true)]
    public partial class ReadByRecId_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", Order=0)]
        public DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure UnitsOfMeasure;
        
        public ReadByRecId_Result() {
        }
        
        public ReadByRecId_Result(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure UnitsOfMeasure) {
            this.UnitsOfMeasure = UnitsOfMeasure;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReadMultiple", WrapperNamespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", IsWrapped=true)]
    public partial class ReadMultiple {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("filter")]
        public DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Filter[] filter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", Order=1)]
        public string bookmarkKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", Order=2)]
        public int setSize;
        
        public ReadMultiple() {
        }
        
        public ReadMultiple(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Filter[] filter, string bookmarkKey, int setSize) {
            this.filter = filter;
            this.bookmarkKey = bookmarkKey;
            this.setSize = setSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReadMultiple_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", IsWrapped=true)]
    public partial class ReadMultiple_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReadMultiple_Result", Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure[] ReadMultiple_Result1;
        
        public ReadMultiple_Result() {
        }
        
        public ReadMultiple_Result(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure[] ReadMultiple_Result1) {
            this.ReadMultiple_Result1 = ReadMultiple_Result1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsUpdated", WrapperNamespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", IsWrapped=true)]
    public partial class IsUpdated {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", Order=0)]
        public string Key;
        
        public IsUpdated() {
        }
        
        public IsUpdated(string Key) {
            this.Key = Key;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsUpdated_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", IsWrapped=true)]
    public partial class IsUpdated_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IsUpdated_Result", Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", Order=0)]
        public bool IsUpdated_Result1;
        
        public IsUpdated_Result() {
        }
        
        public IsUpdated_Result(bool IsUpdated_Result1) {
            this.IsUpdated_Result1 = IsUpdated_Result1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRecIdFromKey", WrapperNamespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", IsWrapped=true)]
    public partial class GetRecIdFromKey {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", Order=0)]
        public string Key;
        
        public GetRecIdFromKey() {
        }
        
        public GetRecIdFromKey(string Key) {
            this.Key = Key;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRecIdFromKey_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", IsWrapped=true)]
    public partial class GetRecIdFromKey_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetRecIdFromKey_Result", Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", Order=0)]
        public string GetRecIdFromKey_Result1;
        
        public GetRecIdFromKey_Result() {
        }
        
        public GetRecIdFromKey_Result(string GetRecIdFromKey_Result1) {
            this.GetRecIdFromKey_Result1 = GetRecIdFromKey_Result1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Create", WrapperNamespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", IsWrapped=true)]
    public partial class Create {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", Order=0)]
        public DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure UnitsOfMeasure;
        
        public Create() {
        }
        
        public Create(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure UnitsOfMeasure) {
            this.UnitsOfMeasure = UnitsOfMeasure;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Create_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", IsWrapped=true)]
    public partial class Create_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", Order=0)]
        public DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure UnitsOfMeasure;
        
        public Create_Result() {
        }
        
        public Create_Result(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure UnitsOfMeasure) {
            this.UnitsOfMeasure = UnitsOfMeasure;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateMultiple", WrapperNamespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", IsWrapped=true)]
    public partial class CreateMultiple {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure[] UnitsOfMeasure_List;
        
        public CreateMultiple() {
        }
        
        public CreateMultiple(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure[] UnitsOfMeasure_List) {
            this.UnitsOfMeasure_List = UnitsOfMeasure_List;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateMultiple_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", IsWrapped=true)]
    public partial class CreateMultiple_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure[] UnitsOfMeasure_List;
        
        public CreateMultiple_Result() {
        }
        
        public CreateMultiple_Result(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure[] UnitsOfMeasure_List) {
            this.UnitsOfMeasure_List = UnitsOfMeasure_List;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Update", WrapperNamespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", IsWrapped=true)]
    public partial class Update {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", Order=0)]
        public DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure UnitsOfMeasure;
        
        public Update() {
        }
        
        public Update(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure UnitsOfMeasure) {
            this.UnitsOfMeasure = UnitsOfMeasure;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Update_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", IsWrapped=true)]
    public partial class Update_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", Order=0)]
        public DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure UnitsOfMeasure;
        
        public Update_Result() {
        }
        
        public Update_Result(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure UnitsOfMeasure) {
            this.UnitsOfMeasure = UnitsOfMeasure;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateMultiple", WrapperNamespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", IsWrapped=true)]
    public partial class UpdateMultiple {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure[] UnitsOfMeasure_List;
        
        public UpdateMultiple() {
        }
        
        public UpdateMultiple(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure[] UnitsOfMeasure_List) {
            this.UnitsOfMeasure_List = UnitsOfMeasure_List;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateMultiple_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", IsWrapped=true)]
    public partial class UpdateMultiple_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure[] UnitsOfMeasure_List;
        
        public UpdateMultiple_Result() {
        }
        
        public UpdateMultiple_Result(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure[] UnitsOfMeasure_List) {
            this.UnitsOfMeasure_List = UnitsOfMeasure_List;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Delete", WrapperNamespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", IsWrapped=true)]
    public partial class Delete {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", Order=0)]
        public string Key;
        
        public Delete() {
        }
        
        public Delete(string Key) {
            this.Key = Key;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Delete_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", IsWrapped=true)]
    public partial class Delete_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Delete_Result", Namespace="urn:microsoft-dynamics-schemas/page/unitsofmeasure", Order=0)]
        public bool Delete_Result1;
        
        public Delete_Result() {
        }
        
        public Delete_Result(bool Delete_Result1) {
            this.Delete_Result1 = Delete_Result1;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface UnitsOfMeasure_PortChannel : DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UnitsOfMeasure_PortClient : System.ServiceModel.ClientBase<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port>, DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port {
        
        public UnitsOfMeasure_PortClient() {
        }
        
        public UnitsOfMeasure_PortClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UnitsOfMeasure_PortClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UnitsOfMeasure_PortClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UnitsOfMeasure_PortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Read_Result DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port.Read(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Read request) {
            return base.Channel.Read(request);
        }
        
        public DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure Read(string Code) {
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Read inValue = new DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Read();
            inValue.Code = Code;
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Read_Result retVal = ((DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port)(this)).Read(inValue);
            return retVal.UnitsOfMeasure;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Read_Result> DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port.ReadAsync(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Read request) {
            return base.Channel.ReadAsync(request);
        }
        
        public System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Read_Result> ReadAsync(string Code) {
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Read inValue = new DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Read();
            inValue.Code = Code;
            return ((DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port)(this)).ReadAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadByRecId_Result DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port.ReadByRecId(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadByRecId request) {
            return base.Channel.ReadByRecId(request);
        }
        
        public DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure ReadByRecId(string recId) {
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadByRecId inValue = new DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadByRecId();
            inValue.recId = recId;
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadByRecId_Result retVal = ((DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port)(this)).ReadByRecId(inValue);
            return retVal.UnitsOfMeasure;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadByRecId_Result> DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port.ReadByRecIdAsync(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadByRecId request) {
            return base.Channel.ReadByRecIdAsync(request);
        }
        
        public System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadByRecId_Result> ReadByRecIdAsync(string recId) {
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadByRecId inValue = new DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadByRecId();
            inValue.recId = recId;
            return ((DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port)(this)).ReadByRecIdAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadMultiple_Result DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port.ReadMultiple(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadMultiple request) {
            return base.Channel.ReadMultiple(request);
        }
        
        public DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure[] ReadMultiple(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Filter[] filter, string bookmarkKey, int setSize) {
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadMultiple inValue = new DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadMultiple();
            inValue.filter = filter;
            inValue.bookmarkKey = bookmarkKey;
            inValue.setSize = setSize;
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadMultiple_Result retVal = ((DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port)(this)).ReadMultiple(inValue);
            return retVal.ReadMultiple_Result1;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadMultiple_Result> DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port.ReadMultipleAsync(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadMultiple request) {
            return base.Channel.ReadMultipleAsync(request);
        }
        
        public System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadMultiple_Result> ReadMultipleAsync(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Filter[] filter, string bookmarkKey, int setSize) {
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadMultiple inValue = new DynamicsNav.Plugin.SOAP.UnitsOfMeasure.ReadMultiple();
            inValue.filter = filter;
            inValue.bookmarkKey = bookmarkKey;
            inValue.setSize = setSize;
            return ((DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port)(this)).ReadMultipleAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DynamicsNav.Plugin.SOAP.UnitsOfMeasure.IsUpdated_Result DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port.IsUpdated(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.IsUpdated request) {
            return base.Channel.IsUpdated(request);
        }
        
        public bool IsUpdated(string Key) {
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.IsUpdated inValue = new DynamicsNav.Plugin.SOAP.UnitsOfMeasure.IsUpdated();
            inValue.Key = Key;
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.IsUpdated_Result retVal = ((DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port)(this)).IsUpdated(inValue);
            return retVal.IsUpdated_Result1;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.IsUpdated_Result> DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port.IsUpdatedAsync(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.IsUpdated request) {
            return base.Channel.IsUpdatedAsync(request);
        }
        
        public System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.IsUpdated_Result> IsUpdatedAsync(string Key) {
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.IsUpdated inValue = new DynamicsNav.Plugin.SOAP.UnitsOfMeasure.IsUpdated();
            inValue.Key = Key;
            return ((DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port)(this)).IsUpdatedAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DynamicsNav.Plugin.SOAP.UnitsOfMeasure.GetRecIdFromKey_Result DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port.GetRecIdFromKey(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.GetRecIdFromKey request) {
            return base.Channel.GetRecIdFromKey(request);
        }
        
        public string GetRecIdFromKey(string Key) {
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.GetRecIdFromKey inValue = new DynamicsNav.Plugin.SOAP.UnitsOfMeasure.GetRecIdFromKey();
            inValue.Key = Key;
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.GetRecIdFromKey_Result retVal = ((DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port)(this)).GetRecIdFromKey(inValue);
            return retVal.GetRecIdFromKey_Result1;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.GetRecIdFromKey_Result> DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port.GetRecIdFromKeyAsync(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.GetRecIdFromKey request) {
            return base.Channel.GetRecIdFromKeyAsync(request);
        }
        
        public System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.GetRecIdFromKey_Result> GetRecIdFromKeyAsync(string Key) {
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.GetRecIdFromKey inValue = new DynamicsNav.Plugin.SOAP.UnitsOfMeasure.GetRecIdFromKey();
            inValue.Key = Key;
            return ((DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port)(this)).GetRecIdFromKeyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Create_Result DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port.Create(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Create request) {
            return base.Channel.Create(request);
        }
        
        public void Create(ref DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure UnitsOfMeasure) {
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Create inValue = new DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Create();
            inValue.UnitsOfMeasure = UnitsOfMeasure;
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Create_Result retVal = ((DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port)(this)).Create(inValue);
            UnitsOfMeasure = retVal.UnitsOfMeasure;
        }
        
        public System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Create_Result> CreateAsync(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Create request) {
            return base.Channel.CreateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DynamicsNav.Plugin.SOAP.UnitsOfMeasure.CreateMultiple_Result DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port.CreateMultiple(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.CreateMultiple request) {
            return base.Channel.CreateMultiple(request);
        }
        
        public void CreateMultiple(ref DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure[] UnitsOfMeasure_List) {
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.CreateMultiple inValue = new DynamicsNav.Plugin.SOAP.UnitsOfMeasure.CreateMultiple();
            inValue.UnitsOfMeasure_List = UnitsOfMeasure_List;
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.CreateMultiple_Result retVal = ((DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port)(this)).CreateMultiple(inValue);
            UnitsOfMeasure_List = retVal.UnitsOfMeasure_List;
        }
        
        public System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.CreateMultiple_Result> CreateMultipleAsync(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.CreateMultiple request) {
            return base.Channel.CreateMultipleAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Update_Result DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port.Update(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Update request) {
            return base.Channel.Update(request);
        }
        
        public void Update(ref DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure UnitsOfMeasure) {
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Update inValue = new DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Update();
            inValue.UnitsOfMeasure = UnitsOfMeasure;
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Update_Result retVal = ((DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port)(this)).Update(inValue);
            UnitsOfMeasure = retVal.UnitsOfMeasure;
        }
        
        public System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Update_Result> UpdateAsync(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Update request) {
            return base.Channel.UpdateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UpdateMultiple_Result DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port.UpdateMultiple(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UpdateMultiple request) {
            return base.Channel.UpdateMultiple(request);
        }
        
        public void UpdateMultiple(ref DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure[] UnitsOfMeasure_List) {
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UpdateMultiple inValue = new DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UpdateMultiple();
            inValue.UnitsOfMeasure_List = UnitsOfMeasure_List;
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UpdateMultiple_Result retVal = ((DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port)(this)).UpdateMultiple(inValue);
            UnitsOfMeasure_List = retVal.UnitsOfMeasure_List;
        }
        
        public System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UpdateMultiple_Result> UpdateMultipleAsync(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UpdateMultiple request) {
            return base.Channel.UpdateMultipleAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Delete_Result DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port.Delete(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Delete request) {
            return base.Channel.Delete(request);
        }
        
        public bool Delete(string Key) {
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Delete inValue = new DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Delete();
            inValue.Key = Key;
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Delete_Result retVal = ((DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port)(this)).Delete(inValue);
            return retVal.Delete_Result1;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Delete_Result> DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port.DeleteAsync(DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Delete request) {
            return base.Channel.DeleteAsync(request);
        }
        
        public System.Threading.Tasks.Task<DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Delete_Result> DeleteAsync(string Key) {
            DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Delete inValue = new DynamicsNav.Plugin.SOAP.UnitsOfMeasure.Delete();
            inValue.Key = Key;
            return ((DynamicsNav.Plugin.SOAP.UnitsOfMeasure.UnitsOfMeasure_Port)(this)).DeleteAsync(inValue);
        }
    }
}
